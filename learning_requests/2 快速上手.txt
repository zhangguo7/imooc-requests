二、快速上手

1、发送请求
import requests
get 请求
r = requests.get('https://github.com/timeline.json')
post 请求
r = requests.post("http://httpbin.org/post")
put 请求
r = requests.put("http://httpbin.org/put")
delete 请求
r = requests.delete("http://httpbin.org/delete")
head 请求
r = requests.head("http://httpbin.org/get")
options 请求
r = requests.options("http://httpbin.org/get")

2、带参数的请求
用字典的键值对存放参数
payload = {'key1': 'value1', 'key2': 'value2'}
r = requests.get("http://httpbin.org/get", params=payload)

还可以将一个列表作为值传入
payload = {'key1': 'value1', 'key2': ['value2', 'value3']}
r = requests.get('http://httpbin.org/get', params=payload)

3、响应内容
import requests
res = requests.get('https://github.com/timeline.json')

相应内容
res.text     Unicode型的数据
res.content  bytes型，即二进制的数据
注：读取文本使用res.text，读取二进制图片、文件，使用res.content

响应编码
res.encoding

4、json响应内容

5、原始响应内容
设置stream=True，获取来自服务器的套接字响应
以流下载的方式，将文件保存到文件
with open(filename, 'wb') as fd:
    for chunk in r.iter_content(chunk_size):
        fd.write(chunk)

6、定制请求头
url = 'https://api.github.com/some/endpoint'
headers = {'user-agent': 'my-app/0.0.1'}
r = requests.get(url, headers=headers)
注意: 1、定制 header 的优先级低于某些特定的信息源
         auth= 参数 .netrc headers
	  2、所有的header值必须是string、bytestring或者unicode
	  
7、更加复杂的POST请求
url = 'https://api.github.com/some/endpoint'
payload = {'some': 'data'}
r = requests.post(url, json=payload)
r = requests.post(url,data = json.dumps(payload))